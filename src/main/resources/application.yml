#logging.pattern.level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
management.endpoints.web.exposure.include: "*"
management.endpoint.health.show-details: always

resilience4j:
  ratelimiter:
    instances:
      rate1:
        limit-for-period: 3 # no calls
        limit-refresh-period: 1m # .. per unit of time
        timeout-duration: 1s # how much to block additional calling thread until exception

  bulkhead:
    configs:
      default: # default for any bulkhead
        max-concurrent-calls: 2
        max-wait-duration: 0ms # how much to allow calls to wait in line

  retry:
    instances:
      retry1:
        max-attempts: 3

        retry-exceptions:
          - org.springframework.web.client.HttpServerErrorException.InternalServerError
         # or, custom predicate
#        retry-exception-predicate: victor.training.resilience.RetryDemo.RetryPredicate
  circuitbreaker:
    instances:
      circuit1:
        sliding-window-size: 5
        sliding-window-type: time_based

        failure-rate-threshold: 99 # 99%

        slow-call-duration-threshold: 1s
        slow-call-rate-threshold: 1 # 100%

        wait-duration-in-open-state: 2s

        permitted-number-of-calls-in-half-open-state: 2
spring:
  cache:
    caffeine:
      spec: maximumSize=100,expireAfterWrite=2s
logging:
  pattern:
    dateformat: "HH:mm:ss.SSS"

target.url.base: http://localhost:8080
